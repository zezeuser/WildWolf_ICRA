<launch>
    <!-- these are the arguments you can pass this launch file, for example gui:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="map" value="RMUA_2020"/>
    
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find icra_robomaster_emulator)/worlds/RMUA_2020.world"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- launch the transform node -->
    <include file="$(find icra_robomaster_emulator)/launch/transform_red1.launch"/>

    <!-- 启动rviz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find icra_robomaster_emulator)/rviz/red1.rviz"/>

    <!-- 发布静态TF -->
    <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher"
              args="0 0 0 0 0 0 base_footprint reverse_base_link 40"/>


    <!-- 加载机器人模型描述参数 -->
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(find icra_robomaster_emulator)/robots/infantry_test_red1.xacro' "/>

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"></node>
       
    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0"/>
    </node>
	

    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
              args="-urdf
                    -x 0.8
                    -y 4.2
                    -z 0
                    -R 0
                    -P 0
                    -Y 3.14
                    -model ROBOT
                    -param robot_description"/>

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find icra_robomaster_emulator)/map/$(arg map).yaml" respawn="false"  />

    <!-- Run the localization node -->
    <node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false" />
	<rosparam command="load" file="$(find roborts_localization)/config/localization.yaml" />
    <rosparam command="load" file="$(find roborts_localization)/amcl/config/amcl.yaml" />

    <!-- Run the global planner node -->
    <node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="false" />

    <!-- Run the local planner node -->
    <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="false" />
    
    <!-- Run the velocity converter node -->
    <node pkg="roborts_planning" type="vel_converter" name="vel_converter_node" respawn="false" />

</launch>
