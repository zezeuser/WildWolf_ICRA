<launch>
    <!-- these are the arguments you can pass this launch file, for example gui:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="map" default="RMUA_2020"/>
    <arg name="ns" default="red1"/>
    <arg name="init_x"  default="0.7"/>
    <arg name="init_y"  default="4.3"/>
    <arg name="init_a"  default="3.14"/>


    <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find icra_robomaster_emulator)/worlds/RMUA_2020.world"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    </include>

   
    	<!-- 启动rviz -->
    	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find icra_robomaster_emulator)/rviz/red1.rviz"/>

    	<!-- TF将带有 red1 前缀 -->
    	<param name="tf_prefix" value="red1"/>


	<!-- 发布 map 话题 -->
        <node pkg="map_server" type="map_server"  name="map_server"  args="$(find icra_robomaster_emulator)/map/$(arg map).yaml" respawn="false"  ns="$(arg ns)">
	</node>

  	<!-- Run the global planner node -->
  	<node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="false" ns="$(arg ns)">
	<param name="car_id"  value = "0"/>
	</node>

  	<!-- Run the local planner node -->
 	 <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="false"  ns="$(arg ns)" >
	<param name="car_id"  value = "0"/>
	<remap from="/$(arg ns)/local_planner_node/cmd_vel_acc"  to= "/$(arg ns)/cmd_vel_acc"/>
	<remap from="/local_planner_node_action/feedback"  to = "/$(arg ns)/local_planner_node_action/feedback"/>
	<remap from="/local_planner_node_action/result"  to = "/$(arg ns)/local_planner_node_action/result"/>
	<remap from="/local_planner_node_action/status"  to = "/$(arg ns)/local_planner_node_action/status"/>
	<remap from="/local_planner_node_action/goal"  to = "/$(arg ns)/local_planner_node_action/goal"/>
	<remap from="/local_planner_node_action/cancel"  to = "/$(arg ns)/local_planner_node_action/cancel"/>
	</node>

	<!-- Run the velocity converter node  在仿真环境中需要将 V,W,A topic -> V,W -->
  	<node pkg="roborts_planning" type="vel_converter" name="vel_converter_node" respawn="false"  ns="$(arg ns)" >
	</node>
	
	<rosparam command="load" file="$(find roborts_localization)/config/localization.yaml" ns="$(arg ns)" />
	<param name="$(arg ns)/odom_frame"  value = "/$(arg ns)/odom"/>
	<param name="$(arg ns)/base_frame"  value = "/$(arg ns)/base_link"/>
	<param name="/$(arg ns)/initial_pose_a"  value = "/$(arg init_a)"/>
        <param name="/$(arg ns)/initial_pose_x"  value = "/$(arg init_x)"/>
	<param name="/$(arg ns)/initial_pose_y"  value = "/$(arg init_y)"/>

	<!-- Run the localization node -->
  	<node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false"  ns="$(arg ns)" >
	<param name="laser_topic_name"  value = "$(arg ns)/scan"/>
	</node>
	
	<!-- 发布静态坐标系 -->
	<include file="$(find roborts_bringup)/launch/static_tf.launch"></include>
	

</launch>
